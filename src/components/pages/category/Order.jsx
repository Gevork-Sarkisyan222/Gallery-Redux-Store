import React, { useEffect, useState } from 'react';
import './category.scss';
import Box from '@mui/material/Box';
import InputLabel from '@mui/material/InputLabel';
import MenuItem from '@mui/material/MenuItem';
import FormControl from '@mui/material/FormControl';
import Select from '@mui/material/Select';
import Button from '@mui/material/Button';
import OrderSkeleton from './order-skeletons/OrderSkeleton';
import TextSkeleton from './order-skeletons/TextSkeleton';
import SelectSkeleton from './order-skeletons/SelectSkeleton';

function Order() {
  const [age, setAge] = React.useState('');
  const [isLoading, setIsLoading] = useState(true);

  const handleChange = (event) => {
    setAge(event.target.value);
  };
  const [age1, setAge1] = React.useState('');

  const handleChange1 = (event) => {
    setAge1(event.target.value);
  };

  function handleFileUpload(event) {
    const file = event.target.files[0];

    if (file) {
      const reader = new FileReader();

      reader.onload = function (e) {
        const image = new Image();

        image.onload = function () {
          if (image.width <= 2000 && image.height <= 2000) {
            const imageContent = document.querySelector('.image-content-border');
            imageContent.style.backgroundImage = `url(${e.target.result})`;
          } else {
            alert('–§–∞–π–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –±–æ–ª—å—à–µ 2000px –≤ —à–∏—Ä–∏–Ω—É –∏–ª–∏ –≤—ã—Å–æ—Ç—É.');
            event.target.value = '';
          }
        };

        image.src = e.target.result;
      };

      reader.readAsDataURL(file);
    }
  }

  useEffect(() => {
    const timer = setTimeout(() => {
      setIsLoading(false);
    }, 1000);

    return () => clearTimeout(timer);
  }, []);

  function handleClickAlert() {
    const fileInput = document.getElementById('fileInput');
    if (!fileInput.files[0]) {
      alert('–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é');
      return;
    }

    if (!age || !age1) {
      alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
      return;
    }

    const randomPrice = Math.floor(Math.random() * (1200 - 500 + 1)) + 500;
    const money = window.confirm(`–°—É–º–º–∞ –∫–∞—Ä—Ç–∏–Ω—ã —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç ${randomPrice} –¥–æ–ª–ª–∞—Ä–æ–≤.`);

    if (money) {
      const userConfirmed = window.confirm(
        '–û–∂–∏–¥–∞–π—Ç–µ –≤–∞—à—É –∫–∞—Ä—Ç–∏–Ω–∫—É –≤ —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –µ—ë –¥–æ—Å—Ç–∞–≤—è—Ç –∫ –≤–∞–º',
      );

      if (userConfirmed) {
        window.location.reload();
      }
    }
  }

  return (
    <div className="Order-Main">
      <div className="order-wrapper">
        <h1>–ó–∞–∫–∞–∑–∞—Ç—å —Å–≤–æ—é –∫–∞—Ä—Ç–∏–Ω—É üì∑üñºÔ∏è</h1>
        <label htmlFor="fileInput" className="custom-file-input-label">
          –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à–µ —Ñ–æ—Ç–æ
        </label>
        <input
          type="file"
          id="fileInput"
          className="custom-file-input"
          accept="image/*"
          onChange={handleFileUpload}
        />
        {isLoading ? (
          <div className="Order-Skeletons">
            <OrderSkeleton />
            <TextSkeleton />
            <SelectSkeleton />
          </div>
        ) : (
          <>
            <div>
              <div className="image-content-border"></div>

              <article className="Checkbox-wrapper">
                <div className="first-checkbox-text">
                  <h2>–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ</h2>
                  <p>–ú—ã —Å–∞–º–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∫—Ä–∞—Å–∫–∏ –ø–æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–º —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º</p>
                </div>
                <div className="checkbox">
                  <span className="icon-check"></span>
                </div>
                <div className="second-checkbox-text">
                  <h2>–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –∏ –¥–æ—Å—Ç–∞–≤–∫–∞ –∫–∞—Ä—Ç–∏–Ω</h2>
                  <p>–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –∏ –¥–æ—Å—Ç–∞–≤–∫–∏ –ø–æ –∞–¥—Ä–µ—Å—É –Ω–∞–±–æ—Ä–∞ –ø–æ —Ñ–æ—Ç–æ –Ω–∞ –∑–∞–∫–∞–∑.</p>
                </div>
                <div className="checkbox">
                  <span className="icon-check"></span>
                </div>
                <div className="third-checkbox-text">
                  <h2>–õ—é–±—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π</h2>
                  <p>–ù–∞—à–∏ —Ö—É–¥–æ–∂–Ω–∏–∫–∏ –≤—ã–ø–æ–ª–Ω—è—Ç, —É—á–∏—Ç—ã–≤–∞—è –≤—Å–µ –∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —Ä–∏—Å—É–Ω–∫–∞.</p>
                </div>
                <div className="checkbox">
                  <span className="icon-check"></span>
                </div>
              </article>
            </div>
            <div className="Select-Border">
              <div className="Select-size">
                <Box sx={{ minWidth: 160 }}>
                  <FormControl fullWidth>
                    <InputLabel id="demo-simple-select-label">–†–∞–∑–º–µ—Ä</InputLabel>
                    <Select
                      labelId="demo-simple-select-label"
                      id="demo-simple-select"
                      value={age}
                      label="Age"
                      onChange={handleChange}>
                      <MenuItem value={10}>40x50</MenuItem>
                      <MenuItem value={20}>40x60</MenuItem>
                      <MenuItem value={30}>50x50</MenuItem>
                      <MenuItem value={40}>50x60</MenuItem>
                      <MenuItem value={50}>50x70</MenuItem>
                      <MenuItem value={60}>50x80</MenuItem>
                      <MenuItem value={70}>50x90</MenuItem>
                      <MenuItem value={80}>50x100</MenuItem>
                      <MenuItem value={90}>60x70</MenuItem>
                      <MenuItem value={100}>56x80</MenuItem>
                      <MenuItem value={110}>56x90</MenuItem>
                      <MenuItem value={120}>56x100</MenuItem>
                      <MenuItem value={130}>56x120</MenuItem>
                      <MenuItem value={140}>100x100</MenuItem>
                      <MenuItem value={150}>120x120</MenuItem>
                    </Select>
                  </FormControl>
                </Box>
                <div className="Term-Border">
                  <Box sx={{ minWidth: 160 }}>
                    <FormControl fullWidth>
                      <InputLabel id="demo-simple-select-label">–°—Ä–æ–∫ –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è</InputLabel>
                      <Select
                        labelId="demo-simple-select-label"
                        id="demo-simple-select"
                        value={age1}
                        label="Age"
                        onChange={handleChange1}>
                        <MenuItem value={10}>10 —á–∞—Å–æ–≤</MenuItem>
                        <MenuItem value={20}>1 –¥–µ–Ω—å</MenuItem>
                        <MenuItem value={30}>2 –¥–Ω—è</MenuItem>
                        <MenuItem value={40}>5 –¥–Ω–µ–π</MenuItem>
                        <MenuItem value={50}>–∫–æ–≥–¥–∞ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–æ</MenuItem>
                      </Select>
                    </FormControl>
                  </Box>
                </div>
              </div>
              <Button
                onClick={handleClickAlert}
                sx={{
                  positon: 'absolute',
                  left: '83px',
                  top: '152px',
                  width: '301px',
                  height: '49px',
                  borderRadius: '10px',
                  zIndex: 11,
                  background: 'linear-gradient(0deg, #18cc00 0%, #5aff57 100%)',
                }}
                variant="contained">
                –ó–∞–∫–∞–∑–∞—Ç—å
              </Button>
            </div>
          </>
        )}
      </div>
    </div>
  );
}

export default Order;
